def first_strategy(_rho, _sigma, _lambda, _beta):
    omega = cp.Variable(n)
    chol_dec = np.linalg.cholesky(_sigma)
    obj = (_lambda * cp.norm(chol_dec@omega, 2)) - (_rho.T @ omega)
    e = np.ones(n)
    constr = [_beta @ omega.T <= 0.5,-1 * (_beta @ omega.T) <= 0.5,e @ omega.T == 1,omega <= [2 for i in range(n)],-1 * omega <= [2 for i in range(n)]]
    prob = cp.Problem(cp.Minimize(obj), constr)
    result = prob.solve(verbose=True)
    return omega.value
